#!/usr/bin/python
# -*- coding: utf-8 -*-

pymongo_found = False
try:
    from pymongo.errors import ConnectionFailure
    from pymongo.errors import OperationFailure
    from pymongo import MongoClient
    pymongo_found = True
except ImportError:
    try:  # for older PyMongo 2.2
        from pymongo import Connection as MongoClient
        pymongo_found = True
    except ImportError:
        pass

def main():
    module = AnsibleModule(
        argument_spec = dict(
            command         = dict(required=True),
            host            = dict(default='localhost'),
            port            = dict(default='27017'),
            auth_database   = dict(default=None),
            auth_username   = dict(default=None),
            auth_password   = dict(default=None),
        )
    )

    if not pymongo_found:
        module.fail_json(msg='the python pymongo module is required')

    command         = module.params['command']
    host            = module.params['host']
    port            = int(module.params['port'])
    auth_database   = module.params['auth_database']
    auth_username   = module.params['auth_username']
    auth_password   = module.params['auth_password']

    result = dict(changed=False)

    client = None
    try:
        client = MongoClient(host, port)
    except ConnectionFailure as e:
        module.fail_json(msg='unable to connect to database: %s' % e)

    # check if we actually need auth
    needs_auth = False
    try:
        client.database_names()
    except OperationFailure as e:
        needs_auth = True

    if (needs_auth and auth_username and auth_password):
        client.admin.authenticate(auth_username, auth_password, source = auth_database)

    result['databases'] = client.database_names()

    module.exit_json(**result)

from ansible.module_utils.basic import *
main()
